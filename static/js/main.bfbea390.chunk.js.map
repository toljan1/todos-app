{"version":3,"sources":["utils/fetchClient.ts","types/FilterBy.ts","components/todoList.tsx","components/todoForm.tsx","components/todoFooter.tsx","components/notification.tsx","api/users.ts","components/registerUser.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","FilterBy","client","TodoList","todos","tempTodo","idProcessed","disableList","onDelete","onUpdate","setIdProcessed","useState","formIsOpenId","setFormIsOpenId","query","setQuery","onRemove","todoId","onChangeComplete","title","completed","handleChange","ev","currentTarget","value","className","map","todo","classNames","onDoubleClick","id","type","disabled","onChange","onClick","onSubmit","preventDefault","length","trim","onBlur","onKeyUp","key","includes","TodoForm","setTitle","onAdd","disableForm","handleToggleAll","aria-label","placeholder","navItems","ALL","ACTIVE","COMPLETED","TodoFooter","setFilterBy","itemsQuantity","filterBy","onClear","completedLength","navItem","href","selected","navItemId","Notification","onClose","error","hidden","getUserByEmail","email","a","users","createUser","name","RegisterUser","setUser","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","someUser","localStorage","setItem","register","catch","checkEmail","existingUser","event","handleSubmit","htmlFor","required","e","target","minLength","App","setTodos","setError","setTempTodo","setDisableForm","setDisableList","visibleTodos","filter","getFilteredTodos","userData","getItem","parse","user","USER_ID","getTodosFromServer","userId","fetchedTodos","fetchedError","message","useEffect","removeTodo","todoTitle","todoCompleted","updateTodo","completedTodos","useMemo","handleClearCompleted","useCallback","ids","forEach","notCompletedTodos","handleAllToggle","fetchedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfbea390.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum FilterBy {\n  ALL = 'ALL',\n  ACTIVE = 'ACTIVE',\n  COMPLETED = 'COMPLETED',\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  tempTodo: Todo | null,\n  idProcessed: number[],\n  disableList: boolean,\n  onDelete: (todoId: number) => void,\n  onUpdate: (todoId: number, todoTitle: string, todoCompleted: boolean) => void,\n  setIdProcessed: (value: React.SetStateAction<number[]>) => void\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  tempTodo,\n  idProcessed,\n  disableList,\n  onDelete,\n  onUpdate,\n  setIdProcessed,\n}) => {\n  const [formIsOpenId, setFormIsOpenId] = useState(0);\n  const [query, setQuery] = useState('');\n\n  const onRemove = (todoId: number | undefined) => {\n    if (todoId) {\n      setIdProcessed([todoId]);\n      onDelete(todoId);\n    }\n  };\n\n  const onChangeComplete = (\n    todoId: number, title: string, completed: boolean,\n  ) => {\n    if (todoId) {\n      setIdProcessed([todoId]);\n      setFormIsOpenId(0);\n      onUpdate(todoId, title, completed);\n    }\n  };\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(ev.currentTarget.value);\n  };\n\n  const handleBlur = (\n    todoId: number, title: string, completed: boolean,\n  ) => onChangeComplete(todoId, title, completed);\n\n  const onSubmit = (title: string, id: number, completed: boolean) => {\n    if (query.length === 0) {\n      onRemove(id);\n\n      return;\n    }\n\n    if (query !== title && query.trim().length) {\n      onChangeComplete(id, query, completed);\n\n      setFormIsOpenId(0);\n    }\n  };\n\n  return (\n    <section className=\"todoapp__main is-loading\">\n      {todos.map(todo => (\n        <div\n          className={classNames(\n            'todo',\n            {\n              completed: todo.completed,\n            },\n          )}\n          key={todo.id}\n          onDoubleClick={() => {\n            setQuery(todo.title);\n            setFormIsOpenId(todo.id);\n          }}\n        >\n          <label\n            className=\"todo__status-label\"\n          >\n            <input\n              type=\"checkbox\"\n              className=\"todo__status\"\n              disabled={disableList}\n              onChange={\n                () => onChangeComplete(todo.id, todo.title, !todo.completed)\n              }\n            />\n          </label>\n\n          {formIsOpenId !== todo.id ? (\n            <>\n              <span className=\"todo__title\">{todo.title}</span>\n\n              <button\n                type=\"button\"\n                className=\"todo__remove\"\n                onClick={() => onRemove(todo.id)}\n                disabled={disableList}\n              >\n                ×\n              </button>\n            </>\n          ) : null}\n\n          {formIsOpenId === todo.id ? (\n            <form\n              onSubmit={(ev) => {\n                ev.preventDefault();\n                onSubmit(todo.title, todo.id, todo.completed);\n              }}\n            >\n              <label>\n                <input\n                  type=\"text\"\n                  className=\"todo__title-field\"\n                  id={`${todo.id}`}\n                  value={query}\n                  onChange={handleChange}\n                  onBlur={() => {\n                    if (query.length === 0) {\n                      onRemove(todo.id);\n\n                      return;\n                    }\n\n                    if (query !== todo.title && query.trim().length) {\n                      handleBlur(todo.id, query, todo.completed);\n\n                      return;\n                    }\n\n                    setFormIsOpenId(0);\n                  }}\n                  onKeyUp={(ev) => {\n                    if (formIsOpenId && ev.key === 'Escape') {\n                      setFormIsOpenId(0);\n                    }\n                  }}\n                />\n              </label>\n            </form>\n          ) : null }\n\n          <div className={classNames('modal overlay', {\n            'is-active': idProcessed.includes(todo.id),\n          })}\n          >\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        </div>\n      ))}\n\n      {tempTodo ? (\n        <div\n          className={classNames(\n            'todo',\n            {\n              completed: tempTodo.completed,\n            },\n          )}\n        >\n          <label\n            className=\"todo__status-label\"\n          >\n            <input\n              type=\"checkbox\"\n              className=\"todo__status\"\n            />\n          </label>\n\n          <span className=\"todo__title\">{tempTodo.title}</span>\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n          >\n            ×\n          </button>\n\n          <div className={classNames('modal overlay', {\n            'is-active': tempTodo.id === 0,\n          })}\n          >\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        </div>\n      ) : tempTodo}\n    </section>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  setTitle: React.Dispatch<React.SetStateAction<string | undefined>>,\n  title: string | undefined,\n  onAdd: () => void,\n  disableForm: boolean,\n  handleToggleAll: () => Promise<void>,\n}\n\nexport const TodoForm: React.FC<Props> = ({\n  setTitle, title, onAdd, disableForm, handleToggleAll,\n}) => {\n  const onSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n    onAdd();\n  };\n\n  const onChange = (\n    ev: React.ChangeEvent<HTMLInputElement>,\n  ) => setTitle(ev.currentTarget.value);\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        type=\"button\"\n        className=\"todoapp__toggle-all active\"\n        aria-label=\"toggle-all\"\n        onClick={handleToggleAll}\n      />\n\n      <form\n        onSubmit={onSubmit}\n      >\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={onChange}\n          disabled={disableForm}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\nimport { FilterBy } from '../types/FilterBy';\n\ninterface Props {\n  setFilterBy: Dispatch<SetStateAction<FilterBy>>,\n  itemsQuantity: number,\n  filterBy: FilterBy,\n  onClear: () => Promise<void>,\n  completedLength: number,\n}\n\nconst navItems = [\n  {\n    title: 'All',\n    id: FilterBy.ALL,\n  },\n  {\n    title: 'Active',\n    id: FilterBy.ACTIVE,\n  },\n  {\n    title: 'Completed',\n    id: FilterBy.COMPLETED,\n  }];\n\nexport const TodoFooter: React.FC<Props> = ({\n  setFilterBy,\n  itemsQuantity,\n  filterBy,\n  onClear,\n  completedLength,\n}) => {\n  const onChangeFilter = (navItemId: FilterBy) => () => {\n    switch (navItemId) {\n      case FilterBy.ACTIVE:\n        setFilterBy(FilterBy.ACTIVE);\n        break;\n\n      case FilterBy.COMPLETED:\n        setFilterBy(FilterBy.COMPLETED);\n        break;\n\n      default:\n        setFilterBy(FilterBy.ALL);\n        break;\n    }\n  };\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {`${itemsQuantity} items left`}\n      </span>\n\n      <nav className=\"filter\">\n        {navItems.map((navItem) => (\n          <a\n            href=\"#/\"\n            id={navItem.id}\n            className={classNames(\n              'filter__link',\n              {\n                selected: filterBy === navItem.id,\n              },\n            )}\n            key={navItem.id}\n            onClick={onChangeFilter(navItem.id)}\n          >\n            {navItem.title}\n          </a>\n        ))}\n      </nav>\n\n      {completedLength ? (\n        <button\n          type=\"button\"\n          className=\"todoapp__clear-completed\"\n          onClick={onClear}\n        >\n          Clear completed\n        </button>\n      ) : null}\n    </footer>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  onClose: (value: string | null) => void,\n  error: string | null,\n}\n\nexport const Notification: React.FC<Props> = ({ onClose, error }) => {\n  const onClick = () => onClose(null);\n\n  return (\n    <div\n      className={classNames(\n        'notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        {\n          hidden: !error,\n        },\n      )}\n    >\n      <button\n        type=\"button\"\n        aria-label={error ?? ''}\n        className=\"delete\"\n        onClick={onClick}\n      />\n\n      {error}\n    </div>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { User } from '../types/User';\nimport { createUser, getUserByEmail } from '../api/users';\n\ninterface Props {\n  setUser: React.Dispatch<any>,\n}\n\nexport const RegisterUser: React.FC<Props> = ({ setUser }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function saveUser(someUser: User) {\n    setUser(someUser);\n    localStorage.setItem('user', JSON.stringify(someUser));\n  }\n\n  function register() {\n    return createUser({ name, email })\n      .then(saveUser)\n      .catch(() => {\n        setErrorMessage('Can\\'t create a user');\n      });\n  }\n\n  function checkEmail() {\n    return getUserByEmail(email)\n      .then(existingUser => {\n        if (existingUser) {\n          saveUser(existingUser);\n        } else {\n          setNeedToRegister(true);\n        }\n      })\n      .catch(() => {\n        setErrorMessage('Can\\'t create a user');\n      });\n  }\n\n  async function handleSubmit() {\n    setLoading(true);\n\n    if (needToRegister) {\n      await register();\n    } else {\n      await checkEmail();\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <section className=\"container is-flex is-justify-content-center\">\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleSubmit();\n        }}\n        className=\"box mt-5\"\n      >\n        <h1 className=\"title is-3\">\n          {needToRegister ? 'You need to register' : 'Get your userId'}\n        </h1>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-email\">\n            Email\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"email\"\n              id=\"user-email\"\n              name=\"email\"\n              className={classNames('input', {\n                'is-danger': !needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your email\"\n              disabled={loading || needToRegister}\n              value={email}\n              required\n              onChange={e => setEmail(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-envelope\" />\n            </span>\n          </div>\n\n          {!needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n\n        {needToRegister && (\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"user-name\">\n              Your Name\n            </label>\n\n            <div\n              className={classNames('control has-icons-left', {\n                'is-loading': loading,\n              })}\n            >\n              <input\n                type=\"text\"\n                id=\"user-name\"\n                name=\"name\"\n                className={classNames('input', {\n                  'is-danger': needToRegister && errorMessage,\n                })}\n                placeholder=\"Enter your name\"\n                required\n                minLength={4}\n                disabled={loading}\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\" />\n              </span>\n            </div>\n\n            {needToRegister && errorMessage && (\n              <p className=\"help is-danger\">{errorMessage}</p>\n            )}\n          </div>\n        )}\n\n        <div className=\"field\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-primary', {\n              'is-loading': loading,\n            })}\n          >\n            {needToRegister ? 'Register' : 'Login'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport {\n  addTodoToServer, getTodos, removeTodo, updateTodo,\n} from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/todoList';\nimport { TodoForm } from './components/todoForm';\nimport { TodoFooter } from './components/todoFooter';\nimport { Notification } from './components/notification';\nimport { FilterBy } from './types/FilterBy';\nimport { RegisterUser } from './components/registerUser';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  filterBy: FilterBy,\n) => {\n  switch (filterBy) {\n    case FilterBy.ACTIVE:\n      return todos.filter(todo => !todo.completed);\n\n    case FilterBy.COMPLETED:\n      return todos.filter(todo => todo.completed);\n\n    default:\n      return todos;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.ALL);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [title, setTitle] = useState<string | undefined>('');\n  const [disableForm, setDisableForm] = useState(false);\n  const [idProcessed, setIdProcessed] = useState<number[]>([0]);\n  const [disableList, setDisableList] = useState(false);\n  const visibleTodos = getFilteredTodos(todos, filterBy);\n  const [user, setUser] = useState(() => {\n    const userData = localStorage.getItem('user');\n\n    return userData ? JSON.parse(userData) : null;\n  });\n\n  const USER_ID = user ? user.id : null;\n\n  const getTodosFromServer = () => {\n    if (USER_ID) {\n      getTodos(USER_ID)\n        .then((fetchedTodos: Todo[]) => {\n          setTodos(fetchedTodos);\n          setIdProcessed([0]);\n        })\n        .catch((fetchedError) => {\n          setError(\n            fetchedError?.message\n              ? fetchedError.message\n              : 'Something went wrong',\n          );\n        });\n    }\n  };\n\n  useEffect(getTodosFromServer, [USER_ID]);\n\n  const onAddTodo = () => {\n    if (title) {\n      setTempTodo({\n        id: 0,\n        userId: USER_ID,\n        title,\n        completed: false,\n      });\n\n      setDisableForm(true);\n\n      addTodoToServer(USER_ID, {\n        userId: USER_ID,\n        title,\n        completed: false,\n      })\n        .then((fetchedTodo: Todo) => {\n          setTodos([...todos, fetchedTodo]);\n          setTempTodo(null);\n          setDisableForm(false);\n          setTitle('');\n        })\n        .catch(() => {\n          setTempTodo(null);\n          setDisableForm(false);\n          setError('Unable to add a todo');\n        });\n    }\n  };\n\n  const onDelete = (todoId: number) => {\n    if (todoId) {\n      setDisableList(true);\n\n      removeTodo(`${todoId}`)\n        .then(() => {\n          getTodosFromServer();\n          setDisableList(false);\n        })\n        .catch(() => {\n          setError('Unable to delete a todo');\n          setDisableList(false);\n        });\n    }\n  };\n\n  const onUpdate = (\n    todoId: number,\n    todoTitle: string,\n    todoCompleted: boolean,\n  ) => {\n    if (todoId) {\n      setDisableList(true);\n\n      updateTodo(`${todoId}`, { completed: todoCompleted, title: todoTitle })\n        .then(() => {\n          getTodosFromServer();\n          setDisableList(false);\n        })\n        .catch(() => {\n          setError('Unable to update a todo');\n          setDisableList(false);\n          setIdProcessed([0]);\n        });\n    }\n  };\n\n  const completedTodos = useMemo(() => todos.filter(todo => todo.completed),\n    [todos]);\n\n  const handleClearCompleted = useCallback(async () => {\n    const ids = completedTodos.map(todo => todo.id);\n\n    setIdProcessed(ids);\n\n    completedTodos.forEach(todo => {\n      if (todo.id) {\n        onDelete(todo.id);\n      }\n    });\n  }, [completedTodos]);\n\n  const notCompletedTodos = useMemo(() => todos.filter(todo => !todo.completed),\n    [todos]);\n\n  const handleAllToggle = useCallback(async () => {\n    let ids;\n\n    if (notCompletedTodos.length) {\n      ids = notCompletedTodos.map(todo => todo.id);\n\n      setIdProcessed(ids);\n\n      notCompletedTodos.forEach(todo => onUpdate(\n        todo.id, todo.title, !todo.completed,\n      ));\n\n      return;\n    }\n\n    ids = todos.map(todo => todo.id);\n\n    setIdProcessed(ids);\n\n    todos.forEach(todo => onUpdate(\n      todo.id, todo.title, !todo.completed,\n    ));\n  }, [notCompletedTodos]);\n\n  if (!USER_ID) {\n    return <RegisterUser setUser={setUser} />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <TodoForm\n          setTitle={setTitle}\n          title={title}\n          onAdd={onAddTodo}\n          disableForm={disableForm}\n          handleToggleAll={handleAllToggle}\n        />\n\n        {todos.length ? (\n          <>\n            <TodoList\n              todos={filterBy !== FilterBy.ALL ? visibleTodos : todos}\n              tempTodo={tempTodo}\n              idProcessed={idProcessed}\n              disableList={disableList}\n              onDelete={onDelete}\n              onUpdate={onUpdate}\n              setIdProcessed={setIdProcessed}\n            />\n            <TodoFooter\n              setFilterBy={setFilterBy}\n              itemsQuantity={filterBy !== FilterBy.ALL\n                ? visibleTodos.length\n                : todos.length}\n              filterBy={filterBy}\n              onClear={handleClearCompleted}\n              completedLength={completedTodos.length}\n            />\n          </>\n        ) : null}\n      </div>\n\n      <Notification\n        onClose={(value: string | null) => setError(value)}\n        error={error}\n      />\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { TodoUpdate } from '../types/TodoUpdate';\nimport { TodoQueryToServ } from '../types/todoQueryToServ';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number | string) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodoToServer = (userId: number, data: TodoQueryToServ) => {\n  return client.post<Todo>(`/todos?userId=${userId}`, data);\n};\n\nexport const removeTodo = (todoId: string) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = (todoId: string, data: TodoUpdate) => {\n  return client.patch<Todo>(`/todos/${todoId}`, data);\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}